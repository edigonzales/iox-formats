plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id "io.github.gradle-nexus.publish-plugin" version "1.0.0"
}

apply from: "$rootDir/gradle/versioning.gradle"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = 'io.github.sogis'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://jars.interlis.ch"
    }
}

dependencies {
    testImplementation 'junit:junit:4.13.2'

    implementation('ch.interlis:iox-ili:1.21.6') {
        exclude group: 'ch.ehi', module: 'ehibasics'
    }
    implementation group: 'ch.ehi', name: 'ehibasics', version: '1.4.1'
    implementation group: 'ch.interlis', name: 'ili2c-tool', version: '5.2.2'
    implementation group: 'ch.interlis', name: 'ili2c-core', version: '5.2.2'
    //implementation group: 'ch.interlis', name: 'iox-wkf', version: '1.1.0'
        
    implementation 'org.apache.parquet:parquet-hadoop:1.13.1'
    //implementation 'org.apache.hadoop:hadoop-core:1.2.1'
    implementation 'org.apache.hadoop:hadoop-client:3.3.5'
    implementation 'org.apache.parquet:parquet-avro:1.13.1'
    implementation 'org.apache.avro:avro:1.11.1'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = "ilivalidator-custom-functions"
                url = "https://github.com/sogis/ilivalidator-custom-functions"
                description = "ilivalidator-custom-functions"
                scm {
                    connection = "scm:git:https@github.com/sogis/ilivalidator-custom-functions"
                    developerConnection = "scm:git:https@github.com/sogis/ilivalidator-custom-functions"
                    url = "https://github.com/sogis/ilivalidator-custom-functions"
                }
                licenses {
                    license {
                        name = "MIT"
                        url = "https://github.com/sogis/ilivalidator-custom-functions/blob/master/LICENSE"
                    }
                }
                developers {
                    developer {
                        id = "edigonzales"
                        name = "Stefan Ziegler"
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

nexusPublishing {
    repositories {
        sonatype { 
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
            password = findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
        }
    }
}
